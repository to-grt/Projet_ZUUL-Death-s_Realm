#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ Classe\ Room,\ g\u00E8re\ les\ pi\u00E8ces\ du\ jeu,\ leurs\ data\ et\ le\ traitement\ de\ celle-ci\r\n\ \r\n\ @author\ Th\u00E9o\ Gueuret\r\n\ @version\ 12/02/2019\r\n
comment1.params=pDescription\ pImage
comment1.target=Room(java.lang.String,\ java.lang.String)
comment10.params=
comment10.target=java.lang.String\ getExitString()
comment10.text=\r\n\ Retourne\ un\ String\ indiquant\ toute\ les\ sortie\ possible\ d'une\ pi\u00E8ce\ sp\u00E9cifique\r\n\ @return\ un\ String\ contenant\ les\ directions\ de\ sorties\ existantes.\r\n
comment11.params=
comment11.target=java.lang.String\ getItemsDescr()
comment11.text=\r\n\ Retourne\ une\ description\ des\ items\ de\ la\ salle\r\n\ @return\ un\ String\ contenant\ la\ description\ format\u00E9e\ des\ Item\ de\ la\ Room.\r\n
comment12.params=
comment12.target=java.lang.String\ getLongDescription()
comment12.text=\r\n\ Retourne\ une\ longue\ description\ de\ la\ pi\u00E8ce\ voulue.\r\n\ @return\ un\ String\ une\ description\ format\u00E9e\ de\ la\ Room.\r\n
comment13.params=
comment13.target=java.lang.String\ getImageName()
comment13.text=\r\n\ Retourne\ un\ String\ decrivant\ le\ nom\ de\ l'image\ de\ la\ piece\r\n\ @return\ un\ String\ contenant\ le\ nom\ de\ l'image\ adpt\u00E9\ \u00E0\ la\ pi\u00E8ce.\r\n
comment14.params=pRoom
comment14.target=boolean\ isExit(Room)
comment14.text=\r\n\ Retourne\ un\ boolean\ permettant\ de\ savoir\ si\ la\ pi\u00E8ce\ pass\u00E9e\ en\ param\u00E8tre\ fait\ partie\ des\ sorties\ de\ la\ Room\ actuelle\r\n\ @param\ pRoom,\ une\ Room,\ on\ veut\ savoir\ si\ cettte\ Room\ fait\ partie\ des\ sorties\ de\ la\ salle\ actuelle.\r\n\ @return\ un\ boolean\ permettant\ de\ savoir\ si\ cette\ Room\ est\ une\ exit\ de\ la\ salle\ actuelle\ ou\ non\ .\r\n
comment2.params=pItem
comment2.target=void\ addItem(Item)
comment2.text=\r\n\ Ajoute\ un\ Item\ dans\ l'attribut\ aItems\ \u00E9tant\ un\ ItemList.\ Cette\ fonction\ permet\ donc\ d'ajouter\ un\ Item\ dans\ la\r\n\ Room\ voulue.\r\n\ @param\ pItem\ un\ Item\ valide\ qui\ va\ \u00EAtre\ ajout\u00E9\ dans\ la\ Room\ voulue\ en\ agrandissant\ l'attriut\ aItems.\r\n
comment3.params=pItem
comment3.target=void\ removeItem(Item)
comment3.text=\r\n\ Retire\ un\ Item\ dans\ l'attribut\ aItems\ \u00E9tant\ un\ ItemList.\ Cette\ fonction\ permet\ donc\ de\ retirer\ un\ Item\ de\ la\r\n\ Room\ voulue.\r\n\ @param\ pItem\ un\ Item\ valide\ qui\ va\ \u00EAtre\ retir\u00E9\ dans\ la\ Room\ voulue\ en\ r\u00E9duisant\ l'attribut\ aItems.\r\n
comment4.params=pDirection\ pNeighboor
comment4.target=void\ setExit(java.lang.String,\ Room)
comment4.text=\r\n\ Ajoute\ une\ sortie\ \u00E0\ une\ pi\u00E8ce\r\n\ @param\ pDirection\ un\ String\ contenant\ la\ direction\ voulue.\r\n\ @param\ pNeighboor\ une\ Room,\ d\u00E9signe\ la\ pi\u00E8ce\ affect\u00E9e\ \u00E0\ la\ direction\r\n
comment5.params=
comment5.target=java.lang.String\ getDescription()
comment5.text=\r\n\ Retourne\ un\ String\ contenant\ la\ description\ de\ la\ pi\u00E8ce\ souhait\u00E9e.\r\n\ \r\n\ @return\ this.aDescription\r\n
comment6.params=
comment6.target=java.util.HashMap\ getItems()
comment6.text=\r\n\ Retourne\ les\ Item\ li\u00E9s\ \u00E0\ la\ room.\r\n\ \r\n\ @return\ une\ HashMap\ de\ String\ et\ d'Items\ des\ Item\ situ\u00E9s\ dans\ la\ Room.\r\n
comment7.params=vName
comment7.target=Item\ getItem(java.lang.String)
comment7.text=\r\n\ Retourne\ l'Item\ voulu\r\n\ @param\ vName\ un\ String\ contenant\ le\ nom\ d'un\ Item.\r\n\ @return\ un\ Item\ tel\ que\ son\ nom\ est\ le\ param\u00EAtre\ de\ la\ fonction.\r\n
comment8.params=pDirection\ pRooms\ pSize
comment8.target=Room\ getExit(java.lang.String,\ java.util.Collection,\ int)
comment8.text=\r\n\ Retourne\ une\ pi\u00E8ce\ (Room)\ situ\u00E9e\ dans\ la\ direction\ voulue\ par\ rapport\ \u00E0\ la\ pi\u00E8ce\ actuelle\r\n\ @param\ pDirection\ String\ indiquant\ la\ direction\r\n\ @param\ pRooms\ une\ Collection\ de\ Room\ \:\ les\ Room\ de\ la\ salle.\r\n\ @param\ pSize\ un\ int\ contenant\ le\ nombre\ de\ Rooms\ \u00E0\ selectionner.\r\n\ @return\ aExits.get(pDirection)\r\n
comment9.params=pRooms\ pSize
comment9.target=Room\ getRandomRoom(java.util.Collection,\ int)
comment9.text=\r\n\ Retourne\ une\ pi\u00E8ce\ al\u00E9atoire.\r\n\ @param\ pRooms\ une\ Collection\ de\ Room\ \:\ les\ Rooms\ pouvant\ etre\ selectionn\u00E9es\ al\u00E9atoirement.\r\n\ @param\ pSize\ un\ Int\ contenant\ la\ taille\ de\ la\ liste\ des\ Room\ selectionnables.\ \r\n\ @return\ une\ Room\ al\u00E9atoire\ parmis\ celle\ disponible(toute\ sauf\ la\ Room\ finale\ et\ elle\ meme)\r\n
numComments=15
